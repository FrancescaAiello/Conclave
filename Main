import java.util.*;

public class Main_c {

    public static void main(String[] args) throws InterruptedException {

        final List<String> total_card = Arrays.asList(    //lista con i nomi di tutti i cardinali che partecipano al conclave
                "Aaron", "Abigail", "Adam", "Adrian", "Aisha", "Alan", "Albert", "Alex", "Alexa", "Alexander",
                "Alice", "Alicia", "Alyssa", "Amanda", "Amelia", "Amy", "Andrea", "Andrew", "Angela", "Anna",
                "Anthony", "Arthur", "Ashley", "Austin", "Barbara", "Benjamin", "Bianca", "Brandon", "Brenda", "Brian",
                "Brittany", "Caleb", "Camila", "Carl", "Carla", "Carlos", "Carmen", "Caroline", "Catherine", "Charles",
                "Charlotte", "Chloe", "Christian", "Christina", "Christopher", "Cindy", "Claire", "Clara", "Colin", "Connor",
                "Daniel", "Danielle", "David", "Deborah", "Derek", "Diana", "Diego", "Dominic", "Donna", "Dylan",
                "Eddie", "Edward", "Elena", "Eleanor", "Elizabeth", "Ella", "Emily", "Emma", "Eric", "Erica",
                "Ethan", "Eva", "Evelyn", "Faith", "Felix", "Fiona", "Francis", "Gabriel", "Gavin", "George",
                "Grace", "Gregory", "Hailey", "Hannah", "Harold", "Heather", "Henry", "Holly", "Hope", "Hunter",
                "Ian", "Isabel", "Isabella", "Isaac", "Irene", "Jack", "Jacob", "James", "Jamie", "Jasmine",
                "Jason", "Jean", "Jeffrey", "Jennifer", "Jeremy", "Jessica", "Joan", "John", "Johnny", "Jonathan",
                "Jordan", "Joseph", "Joshua", "Joy", "Juan", "Judith", "Julia", "Julie", "Justin", "Kaitlyn",
                "Karen", "Katherine", "Kathryn", "Katie", "Kayla", "Keith", "Kelly", "Kevin", "Kim", "Kimberly",
                "Kristen", "Silvestro", "poldo i", "fortes", "De annuntiis"
        );

        Collections.shuffle(total_card);     //viene mescolata la lista
        final List<String> papable_list = new ArrayList<>(total_card.subList(0, (15*total_card.size())/100));    //viene creata una lista dei papabili
        List<Cardinal> Thread_list = new ArrayList<>();           //inizializza una lista contenente Thread Cardinal

        for (String name : total_card) {
            Cardinal c = new Cardinal(name, total_card, papable_list, Thread_list);          //crea e avvia i thread
            new Thread(c).start();
        }

        boolean white_smoke = false;        //inizializza una variabile white_smoke con un valore false

        while (!white_smoke) {              //se non c'è stata la fumata bianca avvia il processo di votazione
            Thread.sleep(10000);      // votazione avviene ogni 10 secondi

            // Inizio votazione
            Cardinal.startVoting();         //comunica ai Cardinal che è iniziata la votazione

            List<Tuple> voti = new ArrayList<>();                //inizializza una lista di Tuple

            synchronized (Thread_list) {              //blocco sincronizzato con la lista dei Thread

                for (Cardinal c : Thread_list) {
                    // *** CORRETTA: accesso al nome della tupla ***
                    String voto = c.Myfavourite.get(0).name;           //per ogni Cardinal viene estratto il primo cardinale nella lista delle preferenze

                    boolean trovato = false;             //inizializza una variabile found per verificare se il cardinale votato è già nella lista dei voti

                    for (Tuple t : voti) {
                        if (t.name.equals(voto)) {
                            t.score++;                      //se il cardinale è già presente nella lista dei voti, allora incrementa il suo voto di 1
                            trovato = true;
                            break;                          //esce dalla votazione
                        }
                    }

                    if (!trovato) {                             //se il cardinale votato non è nella lista dei voti
                        voti.add(new Tuple(voto, 1));     //viene aggiunto
                    }
                }

                System.out.println("\nRisultati votazione:");
                for (Tuple t : voti) {                                              //viene stampata la lista dei voti
                    System.out.println(t.name + ": " + t.score + " voti");
                }
            }

            int min_soil = (int) Math.ceil((2.0 / 3.0) * total_card.size());             //in java la divisione viene approssimata per difetto, quindi 2/3 darebbe 0, quindi viene fatta una divisione fra float, arrotondata e convertita ad int

            for (Tuple t : voti) {
                if (t.score >= min_soil) {                                                                            //se nella lista dei voti c'è un cardinale con voto più
                    System.out.println("\n⚪ Il nuovo Papa è: " + t.name + " con " + t.score + " voti! ⚪\n");       //di 2/3 dei cardinali, allora fumata bianca
                    white_smoke = true;
                    break;
                }
            }

            if (!white_smoke) {
                Cardinal.endVoting();               //se fumata nera, viene interrotto il processo di votazione, permettendo ad ogni Cardinal di tornare a muoversi
            }
        }

        synchronized (Thread_list) {
            for (Cardinal c : Thread_list) {                                 //dopo la fumata bianca viene disattivato ogni Cardinal
                c.active = false;
            }
        }

        System.out.println("Simulazione terminata.");
    }
}
